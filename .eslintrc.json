{
  "root": true,
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:next/recommended",
    "prettier", // Prettierとの競合を解消し、Prettierのルールを優先
    "plugin:prettier/recommended" // PrettierをESLintのルールとして実行
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json" // TypeScriptプロジェクトのパスを指定
  },
  "plugins": [
    "react",
    "react-hooks",
    "@typescript-eslint",
    "prettier",
    "jsx-a11y",
    "import",
    "next"
  ],
  "settings": {
    "react": {
      "version": "detect" // 使用しているReactのバージョンを自動検出
    },
    "import/resolver": {
      "typescript": true,
      "node": true
    }
  },
  "rules": {
    // --- 厳しめのTypeScriptルール ---
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "argsIgnorePattern": "^_" }
    ], // 未使用変数をエラーに (アンダースコア始まりは除く)
    "@typescript-eslint/explicit-module-boundary-types": "error", // exportされる関数の戻り値の型を必須に
    "@typescript-eslint/no-explicit-any": "error", // anyの使用を禁止 (厳しすぎると感じる場合は "warn" に)
    "@typescript-eslint/no-non-null-assertion": "error", // non-null assertionの使用を禁止
    "@typescript-eslint/prefer-optional-chain": "error", // オプショナルチェーンの利用を推奨
    "@typescript-eslint/array-type": ["error", { "default": "array-simple" }], // Array<T> ではなく T[] を推奨
    "@typescript-eslint/ban-ts-comment": "error", // @ts-ignore などの使用を禁止
    "@typescript-eslint/consistent-type-imports": "error", // 型のインポートは `import type` を推奨
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "prefix": ["I"] // インターフェース名にIをプレフィックスとして強制 (任意)
      },
      {
        "selector": "typeAlias",
        "format": ["PascalCase"],
        "prefix": ["T"] // 型エイリアス名にTをプレフィックスとして強制 (任意)
      },
      {
        "selector": "variable",
        "format": ["camelCase", "PascalCase", "UPPER_CASE"]
      },
      {
        "selector": "function",
        "format": ["camelCase", "PascalCase"]
      }
    ],

    // --- 厳しめのReactルール ---
    "react/jsx-uses-react": "off", // Next.js 12以降は不要
    "react/react-in-jsx-scope": "off", // Next.js 12以降は不要
    "react/prop-types": "off", // TypeScriptを使用するため不要
    "react/self-closing-comp": "error", // 空のコンポーネントは自己終了タグを推奨
    "react/jsx-boolean-value": ["error", "never"], // Boolean属性は短縮形ではなく `true` を明示的に指定
    "react/jsx-curly-brace-presence": [
      "error",
      { "props": "never", "children": "never" }
    ], // 不必要な波括弧を禁止
    "react/destructuring-assignment": ["error", "always"], // Propsの分割代入を強制
    "react/jsx-no-useless-fragment": "error", // 不必要なFragmentを禁止
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ], // 関数コンポーネントの定義方法をアロー関数に統一

    // --- 厳しめのReact Hooksルール ---
    "react-hooks/rules-of-hooks": "error", // Hooksのルールを強制
    "react-hooks/exhaustive-deps": "error", // useEffect, useCallbackなどのdeps配列の網羅性を強制

    // --- 厳しめのJSX A11yルール ---
    "jsx-a11y/alt-text": "error", // img要素にalt属性を必須
    "jsx-a11y/anchor-is-valid": [
      "error",
      {
        "components": ["Link"],
        "specialLink": ["hrefLeft", "hrefRight"],
        "aspects": ["invalidHref", "preferButton"]
      }
    ], // 無効なアンカータグを禁止
    "jsx-a11y/no-autofocus": ["error", { "ignoreFormControl": true }], // 自動フォーカスを禁止 (フォームコントロールは除く)
    "jsx-a11y/no-redundant-roles": "error", // 不要なrole属性を禁止
    "jsx-a11y/click-events-have-key-events": "error", // クリックイベントにはキーイベントも必須

    // --- 厳しめのImportルール ---
    "import/no-unresolved": "error", // 解決できないパスのインポートをエラーに
    "import/named": "error", // 名前付きエクスポートの解決をエラーに
    "import/namespace": "error", // 名前空間エクスポートの解決をエラーに
    "import/default": "error", // デフォルトエクスポートの解決をエラーに
    "import/export": "error", // 重複するエクスポートをエラーに
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index",
          "object",
          "type"
        ],
        "pathGroups": [
          {
            "pattern": "{react,react-dom/**,next/**}",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@/**",
            "group": "internal"
          }
        ],
        "pathGroupsExcludedImportTypes": ["react"],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ], // インポートの順序を強制
    "import/no-duplicates": "error", // 重複するインポートを禁止
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": ["**/*.test.ts", "**/*.spec.ts", "**/*.stories.tsx"]
      }
    ], // devDependenciesからのインポートを禁止

    // --- 厳しめのNext.jsルール ---
    "next/no-img-element": "error", // `<img>` タグではなく `next/image` の使用を推奨
    "next/no-html-link-for-pages": "error", // ページコンポーネント内での `<a href="/pages/...">` を禁止し、`next/link` の使用を強制
    "next/no-styled-jsx-in-document": "error", // `_document.js` での styled-jsx の使用を禁止

    // --- 全般的なルール ---
    "no-console": ["error", { "allow": ["warn", "error"] }], // console.logを禁止 (warn, errorは許可)
    "no-debugger": "error", // debuggerの使用を禁止
    "eqeqeq": ["error", "always"], // 厳密等価演算子 (===) の使用を強制
    "no-unused-vars": "off", // @typescript-eslint/no-unused-vars に任せるためオフ
    "no-undef": "off", // TypeScriptに任せるためオフ
    "prefer-const": "error", // 再代入されない変数はconstの使用を強制
    "quotes": ["error", "single", { "avoidEscape": true }], // シングルクォートを強制
    "semi": ["error", "always"], // セミコロンを必須
    "indent": "off", // Prettierに任せるためオフ
    "linebreak-style": ["error", "unix"], // 改行コードをLFに統一
    "comma-dangle": ["error", "always-multiline"], // 複数行の場合の末尾カンマを必須
    "object-curly-spacing": ["error", "always"], // オブジェクトの波括弧内のスペースを強制
    "array-bracket-spacing": ["error", "never"], // 配列の角括弧内のスペースを禁止
    "space-in-parens": ["error", "never"], // 丸括弧内のスペースを禁止
    "no-trailing-spaces": "error", // 行末のスペースを禁止
    "padded-blocks": ["error", "never"], // ブロック内のパディングを禁止
    "lines-between-class-members": [
      "error",
      "always",
      { "exceptAfterSingleLine": true }
    ], // クラスメンバー間に空行を必須
    "max-lines": [
      "error",
      { "max": 300, "skipComments": true, "skipBlankLines": true }
    ], // ファイルの最大行数を制限
    "max-lines-per-function": [
      "error",
      { "max": 50, "skipComments": true, "skipBlankLines": true, "IIFEs": true }
    ], // 関数の最大行数を制限
    "max-params": ["error", 4], // 関数の最大引数を制限
    "complexity": ["error", 10] // 関数の循環的複雑度を制限
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "rules": {
        // TypeScriptファイルにのみ適用するルールがあればここに追加
      }
    }
  ]
}